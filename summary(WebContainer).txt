


-------------------

tomcat

tomcat架构：

（1）总体结构和请求流程
掌握整个tomcat的是Server，一个Server有多个Service，一个Service可以有多个Connector和一个Container。

Server用来控制多个Service的生命周期，控制Service的创建和销毁。

Service处理连接，Service主要包含两个部分：Connector和Container，这两个组件是Tomcat最重要的组件，一个Service只有一个Container，但是可以有多个Connectors
Connector用于处理连接相关的事情，提供Socket，把http请求封装成Request和Response
Container用于封装和管理Servlet，以及具体处理Request请求；

一个请求发送到Tomcat之后，首先经过Service然后会交给我们的Connector，Connector用于接收请求并将接收的请求封装为Request和Response来具体处理，
Request和Response封装完之后再交由Container进行处理，Container处理完请求之后再返回给Connector，最后在由Connector通过Socket将处理的结果返回给客户端，
这样整个请求的就处理完了！

Connector最底层使用的是Socket来进行连接的，Request和Response是按照HTTP协议来封装的，所以Connector同时需要实现TCP/IP协议和HTTP协议！


（2）Connector结构详情
这一部分涉及到tomcat的 多线程、线程池、同步阻塞BIO、同步非阻塞NIO，异步非阻塞AIO 等等方面

Connector就是使用ProtocolHandler来处理请求的，不同的ProtocolHandler代表不同的连接类型，
比如：Http11Protocol使用的是普通Socket来连接的，Http11NioProtocol使用的是NioSocket来连接的。

以最初版，同步阻塞为例，ProtocolHandler由包含了三个部件：Endpoint、Processor、Adapter。

Endpoint用来处理底层Socket的网络连接，Processor用于将Endpoint接收到的Socket封装成Request，Adapter用于将Request交给Container进行具体的处理。
Endpoint由于是处理底层的Socket网络连接，因此Endpoint是用来实现TCP/IP协议的，而Processor用来实现HTTP协议的，Adapter将请求适配到Servlet容器进行具体的处理。
Endpoint的抽象实现AbstractEndpoint里面定义的Acceptor和AsyncTimeout两个内部类和一个Handler接口。Acceptor用于监听请求，AsyncTimeout用于检查异步Request的超时，Handler用于处理接收到的Socket，在内部调用Processor进行处理。


（3）Container结构详情
Container内部包含了4个子容器
Engine：引擎，用来管理多个站点，一个Service最多只能有一个Engine； 
Host：代表一个站点，也可以叫虚拟主机，通过配置Host就可以添加站点；
Context：代表一个应用程序，对应着平时开发的一套程序，或者一个WEB-INF目录以及下面的web.xml文件；
Wrapper：每一Wrapper封装着一个Servlet；

Context和Host的区别是Context表示一个应用，我们的Tomcat中默认的配置下webapps下的每一个文件夹目录都是一个Context，其中ROOT目录中存放着主应用，其他目录存放着子应用，而整个webapps就是一个Host站点。



-------------------

tomcat多线程：










----------------------------------------------------------------------------------------------

















