---------------------------------------

TCP （传输层）
TCP（Transmission Control Protocol 传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议

当应用层向TCP层发送用于网间传输的、用8位字节表示的数据流，TCP则把数据流分割成适当长度的报文段，
最大传输段大小（MSS）通常受该计算机连接的网络的数据链路层的最大传送单元（MTU）限制。
之后TCP把数据包传给IP层，由它来通过网络将包传送给接收端实体的TCP层。

TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。
然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传。

在数据正确性与合法性上，TCP用一个校验和函数来检验数据是否有错误，在发送和接收时都要计算校验和；同时可以使用md5认证对数据进行加密。
在保证可靠性上，采用超时重传和捎带确认机制。
在流量控制上，采用滑动窗口协议，协议中规定，对于窗口内未经确认的分组需要重传。
在拥塞控制上，采用广受好评的TCP拥塞控制算法（也称AIMD算法）。该算法主要包括三个主要部分：1）加性增、乘性减；2）慢启动；3）对超时事件做出反应。


建立一个连接需要三次握手，而终止一个连接要经过四次握手.
三次握手
(1).客户端发送SYN（SEQ=x）报文给服务器端，进入SYN_SEND状态。
(2).服务器端收到SYN报文，回应一个SYN （SEQ=y）ACK(ACK=x+1）报文，进入SYN_RECV状态。
(3).客户端收到服务器端的SYN报文，回应一个ACK(ACK=y+1）报文，进入Established状态。
四次握手
(1).客户端A发送一个FIN，用来关闭客户A到服务器B的数据传送。 
(2).服务器B收到这个FIN，它发回一个ACK，确认序号为收到的序号加1。和SYN一样，一个FIN将占用一个序号。 
(3).服务器B关闭与客户端A的连接，发送一个FIN给客户端A。 
(4).客户端A发回ACK报文确认，并将确认序号设置为收到序号加1。 


---------------------------------------


端口
一台拥有IP地址的主机可以提供许多服务，比如Web服务、FTP服务、SMTP服务等，这些服务完全可以通过1个IP地址来实现。
那么，主机是怎样区分不同的网络服务呢？显然不能只靠IP地址，因为IP 地址与网络服务的关系是一对多的关系。实际上是通过“IP地址+端口号”来区分不同的服务的。

TCP端口和UDP端口。由于TCP和UDP 两个协议是独立的，因此各自的端口号也相互独立，比如TCP有235端口，UDP也 可以有235端口，两者并不冲突。

公认端口
这类端口也常称之为"常用端口"。
这类端口的端口号从0到1024，它们紧密绑定于一些特定的服务。通常这些端口的通信明确表明了某种服务的协议，这种端口是不可再重新定义它的作用对象。
例如：80端口实际上总是HTTP通信所使用的，而23号端口则是Telnet服务专用的。这些端口通常不会像木马这样的黑客程序利用。
 
注册端口 端口号从1025到49151。它们松散地绑定于一些服务。也是说有许多服务绑定于这些端口，这些端口同样用于许多其他目的。
这些端口多数没有明确的定义服务对象，不同程序可根据实际需要自己定义，如后面要介绍的远程控制软件和木马程序中都会有这些端口的定义的。
记住这些常见的程序端口在木马程序的防护和查杀上是非常有必要的。常见木马所使用的端口在后面将有详细的列表。 

动态和/或私有端口
端口号从49152到65535。理论上，不应把常用服务分配在这些端口上。实际上，有些较为特殊的程序，特别是一些木马程序就非常喜欢用这些端口，因为这些端口常常不被引起注意，容易隐蔽。 


---------------------------------------



TELNET (远程登录) （C/S）（tcp）


FTP （文件传送协议）（C/S）(TCP)
FTP协议的客户机与服务器之间需要建立两个连接， 一个用于控制数据传输（端口21）， 一个用于数据传输（端口20）。
数据连接主要用于数据传输，完成文件内容的传输。控制连接主要用于传输FTP控制命令和服务器的回送消息。


SMTP （简单邮件传输协议）（TCP）（C/S）


HTTP （超文本传输协议）（C/S）(TCP)


DNS （域名解析系统）（UDP）
DNS通常被其他应用层协议（HTTP, SMTP, FTP）所使用， 以便将用户提供的主机名解析为IP地址。
域名是一种分布式并具有层次结构的命名机制：
例如：www.sina.com.cn， 其中最高域名是cn， 表示这台主机在中国。 
第二级域名是com， 表示这个主机属于公司机构； 接下来是sina表示这台主机属于新浪网， 
最左边的是www，表示该主机是一台web服务器。人们可以很容易的就记住它的域名，而不用他的IP地址。


SNMP （简单网络管理协议）（UDP）


TFTP （UDP）


---------------------------------------


套接字
源IP地址和目的IP地址以及源端口号和目的端口号的组合称为套接字。其用于标识客户端请求的服务器和服务。


---------------------------------------


HTTP协议详解

http（超文本传输协议）是一个基于请求与响应模式的、无状态的、应用层的协议，
常基于TCP的连接方式，HTTP1.1版本中给出一种持续连接的机制，
绝大多数的Web开发，都是构建在HTTP协议之上的Web应用。

HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。
它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW中使用的是HTTP/1.0的第六版，HTTP/1.1的规范化工作正在进行之中，而且HTTP-NG(Next Generation of HTTP)的建议已经提出。
HTTP协议的主要特点可概括如下：
1.支持客户/服务器模式。
2.简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。
  每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。
3.灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。
4.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。
5.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。
  另一方面，在服务器不需要先前信息时它的应答就较快。


---------------------------------------


  
Http请求由三部分组成，分别是：请求行、消息报头、请求正文


  

---------------------------------------



HTTP响应也是由三个部分组成，分别是：状态行、消息报头、响应正文





---------------------------------------














