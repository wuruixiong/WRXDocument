
TCP/IP协议层级结构：
链路层（物理接口）
网络层(IP,ICMP,IGMP)
运输层(TCP,UDP)
应用层(FTP,HTTP)

***************************************************************************************************


Cookie
Cookie，有时也用其复数形式 Cookies，指某些网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）。
可以叫做浏览器缓存， 是 Web 服务器保存在用户浏览器（客户端）上的小文本文件

session
用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去
退出浏览器，则session不保存

session是放在服务器端的，而cookie是在客户端的


***************************************************************************************************


java ee for eclipse

1.在eclipse中，windows->show view ->可以打开工具栏
2.在servers中双击服务器可以配置服务器
3.想要在项目中使用jstl标签库需要在\apache-tomcat-7.0.63\webapps\WebTest3\lib下手动拷入jstl的jar包，并且在eclipse中导入该jar包



虽然可以再jsp中使用<%%>来运行java代码但是主要是在servlet中执行运算操作，再把数据封存到域中，再转发到jsp中，再使用EL表达式在jsp中对数据读取并显示


转发网页和重定向网页是不同的，
转发网页有一条request，浏览器地址栏最后显示的地址还是原网页
重定向网页有两条request，浏览器地址栏最后显示的地址是最后被指向的网页

给.jsp传参数：key为username，values为xxx，加了参数的地址即使Login.jsp中没有处理对应的代码，页面也照常显示
http://localhost:8080/WebTest3/SessionTest/Login.jsp?username=xxx
key为username，values为xxx，还有key为password，values为ddd
http://localhost:8080/WebTest3/SessionTest/Login.jsp?username=xxx&password=ddd

javaWeb 三大重要部分servlet，filter，listener

使用tomcat服务器时默认端口8080，网页浏览器默认端口80
在conf的server的Connector中修改默认端口号，可以不用输入端口号

server.xml的结构：
根元素：<Service>
<Service>中有<Connector>负责网络协议
有<Engine>负责处理各种请求
<Engine>中有多个主机<host>
<host>可以有多个上下文<Context>(web项目)

chrome抓包：
在设置的更多工具的开发者工具
network，可以看到工程，在name中右键web项目可以复制请求报文和响应报文
key/value格式
相应报文：相应行的状态码：200成功，300转接，400客户端错误（例如打错网址），500服务器错误

URL中问号之后的是为参数部分
getRequestURI()：获取请求URI，等于项目名+Servlet路径。/day10_2/AServlet
getRequestURL()：获取请求URL，等于不包含参数的整个请求路径。http://localhost:8080/day10_2/AServlet


执行
super.doPost(req, resp);
会使resp被提交，这时不能请求转发和请求包含。

在tomcat/work可以查看生成出来的.java文件


一般情况下，如果需要输入参数作为时间，int类型一般都是秒，long类型一般都是毫秒


响应头：Content-Type，内容类型，一般是指网页中存在的Content-Type，用于定义网络文件的类型和网页的编码，
决定浏览器将以什么形式、什么编码读取这个文件，这就是经常看到一些Asp网页点击的结果却是下载到的一个文件或一张图片的原因。



***************************************************************************************************

javaBean的规范：
  1. 必须要有一个默认构造器
  2. 提供get/set方法，如果只有get方法，那么这个属性是只读属性！
  3. 属性：有get/set方法的成员，还可以没有成员，只有get/set方法。属性名称由get/set方法来决定！而不是成员名称！
  4. 方法名称满足一定的规范，那么它就是属性！boolean类型的属性，它的读方法可以是is开头，也可以是get开头！
  
  
继承java.lang.Object类，重写：
	@Override
	public String toString() {
		return "";
		//源码：return getClass().getName() + "@" + Integer.toHexString(hashCode());
	}
可以在System.out.println中直接输出toString方法返回的字符串
		OutputString outputString = new OutputString();//类名
		System.out.println(outputString);
	
***************************************************************************************************

	
	

















***************************************************************************************************



MySQL
命令行：

show databases;
显示所有数据库


use 数据库名;
使用数据库


show tables;
显示数据库下所有的表







图形界面化工具
Navicat for MySQL



procedure
CREATE PROCEDURE 过程名 ([过程参数[,...]])

例如：
// 所有用户
create procedure all_customer() select * from testtable2;
// 接着打入（相当于打入：select * from testtable2; ）
call all_customer();
// 看到查找了表testtable2中所有的数据

// 删除
DROP PROCEDURE IF EXISTS 'proc_adder';

创建带参数的插入方法
create procedure insertTable2(in myid int, in myname varchar(20)) insert into testtable2(id, name) value(myid, myname);
调用：call insertTable2(101, 'ooo');

创建带参数，返回值的插入方法
create procedure selecttable2(in myid int, out rname varchar(20)) select name into rname from testtable2 where id = myid;
调用：call selecttable2(101, @rname);




***************************************************************************************************


DAO设计模式



***************************************************************************************************


JDBC








***************************************************************************************************


java web SSH

Struts负责表现层，Hibernate负责持久层，Spring负责中间的业务层

表现层（显示层）
采用MVC模式。 
M称为模型，也就是实体类。用于数据的封装和数据的传输。 
V为视图，也就是GUI组件，用于数据的展示。 
C为控制，也就是事件，用于流程的控制。
Struts框架，实现MVC，Struts调用业务层完成运算逻辑，业务层再调用持久层完成数据库的读写。


业务层（逻辑层、service层）
Spring是一个业务层框架，是一个整合的框架，能够很好地黏合表示层与持久层。
依赖注射和控制反转，解耦类之间的依赖关系，解耦表示层与持久层。


持久层（DAO Data Access Object）
采用DAO模式，建立实体类和数据库表映射（ORM映射）。完成对象数据和关系数据的转换。
Hibernate框架，持久化类的对象，就是将数据库中的数据转换成类的对象，或者将对象的修改提交到数据库


********************


也可以称为：
表示层(web层)、业务逻辑层(service层)、数据访问层(dao层)
































eclipse 新坑
***************************************************************************************************

在Servlet 3.0中，新创建的HttpServlet子类，已经不需要在web.xml中配置
  <servlet>
    <servlet-name>MyTestServlet</servlet-name>
    <servlet-class>com.wrx.testweb.MyTestServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>MyTestServlet</servlet-name>
    <url-pattern>/MyTestServlet</url-pattern>
  </servlet-mapping>

只要添加了以下注解，将自动识别HttpServlet
@WebServlet("/MyTestServlet2")


***************************************************************************************************

新建的java web项目，编译时在WEB-INF下的classes中不会编译出 .class文件，此时会导致HttpServlet class not found 报错
需要修改 class文件的输出路径‘

据说把自动发布功能勾选上，会解决问题

***************************************************************************************************







