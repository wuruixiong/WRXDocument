如果修改R文件前缀，需要修改该项目的配置文件，如果是使用gradle构建项目，还需要在build.gradle修改包名


在idea中在调试模式下将鼠标移动到变量上会显示变量的地址，或者在debug栏的variables中看到当前断点的信息，或者在watchs中加入该变量。
在idea中，在编辑编译（edit configurations）界面点击launch可以设置编译完成后启动的activity
在idea右下角，可以选择 file encoding 设置全代码的编码格式，例如当需要使用UTF-8格式时如果file encoding没有选择先对应的UTF-8会出现乱码。

在idea的debug界面，debugger的frames中可以看到调用堆栈，显示当前断点之前的调用顺序
在logcat中程序出现崩溃，error的错误是由下往上调用的，即下边的调用上边的，出现蓝色部分是自己写的程序有关的。

在遇到某些代码没有执行看仔细，有可能是直接return了。

对于声明final的变量，若初始值为空只允许在构造方法中赋值，其余情况不允许赋值

在控件中，如果没有编写监听事件的，即使编写了按下效果有时候按下效果也无反应。
例如：在listview中，如果item有多个控件，并没有写监听事件，即使编写了按下效果有时候按下效果也无反应，而会显示listview的按下效果

使用当前类继承接口，之后再把this作为参数传入方法，可以在this之后为 接口名 写注释，如下：
method(this /*interface name*/)

在View的创建中，避免创建多个layout，避免在代码中addview
在销毁资源时，在创建资源的类销毁。
对于手动置空（null）的变量，在使用时添加判断是否为空

在异步加载时（即使用AsynTask或者Handle）,可以打入log判断异步加载是否被执行

在通过对handle执行sendmessage操作，会把当前发送的message送入消息队列的最后，当之前的所有执行完之后才会执行当前操作

！！！在实验阶段代码就要符合正常逻辑，避免以后正式编写代码拷贝研究代码时代码不合逻辑

初始化步骤：
1.初始化数据（init）
2.初始化布局（initview）
3.初始化监听事件（initlistener）

在阶段性代码完成之后应该检查：
1.检查接口定义，全局变量定义之后是否被使用！
2.需要释放的对象是否释放，例如：arraylist，stream
3.对象是否命名错误，例如：静态成员变量前缀为s，普通成员变量前缀为m，局部变量首字母不大写，方法首字母不大写
4.检查资源id是否带有标示性的前缀
5.删除不要的垃圾代码，非必要的注销的代码，资源文件中不需要的也要删除
6.思索数据结构的优化，将没有必要的全局变量去掉
7.检查重复操作，避免相同意义或功能的方法被重复使用


设计UI结构时，最好有UI效果图，对照效果图布局


验证有无网络缓存，只需要将网络断开即可验证，
同理，要验证一个代码是否生效，只需要将产生该东西的条件屏蔽即可







在调研阶段，查看api，查看文档，查看介绍比直接查看代码更实用


时刻告诫自己，你是在写一个很多人都在用的东西，不是写给自己用的，不能随随便便就完结了，要用非常挑剔的眼光去看待自己写的东西
1.最基本的是保证不出问题，即没有明显的BUG，响应效果不能出错
2.界面上要简洁、美观
3.功能上要强大、实用










